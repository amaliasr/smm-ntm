<style type="text/css">
    .progress {
        height: 40px;
        border-radius: 0px;
    }

    .progress-bar {
        text-align: left;
        padding-left: 10px;
    }

    input[type="time"] {
        position: relative;
    }

    input[type="time"]::-webkit-calendar-picker-indicator {
        display: block;
        top: 0;
        right: 0;
        height: 100%;
        width: 100%;
        position: absolute;
        background: transparent;
    }

    .form-check {
        display: flex;
        align-items: center;
    }

    .form-check-input {
        transform: scale(0.6);
        margin: 0;
    }

    .form-check-label {
        font-size: 12px;
        margin-left: 5px;
    }

    .line-with-text {
        display: flex;
        align-items: center;
        text-align: center;
    }

    .line-with-text hr {
        flex-grow: 1;
        border: none;
        border-top: 1px solid black;
    }

    .bg-dark-grey {
        color: white;
        background-color: #61677A !important;
    }

    .card-waste:hover {
        background-color: #F7F7F7;
    }
</style>
<style>
    .scale-in-center {
        -webkit-animation: scale-in-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
        animation: scale-in-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
    }

    /* ----------------------------------------------
 * Generated by Animista on 2023-8-24 15:59:46
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

    /**
 * ----------------------------------------
 * animation scale-in-center
 * ----------------------------------------
 */
    @-webkit-keyframes scale-in-center {
        0% {
            -webkit-transform: scale(0);
            transform: scale(0);
            opacity: 1;
        }

        100% {
            -webkit-transform: scale(1);
            transform: scale(1);
            opacity: 1;
        }
    }

    @keyframes scale-in-center {
        0% {
            -webkit-transform: scale(0);
            transform: scale(0);
            opacity: 1;
        }

        100% {
            -webkit-transform: scale(1);
            transform: scale(1);
            opacity: 1;
        }
    }

    .scale-out-center {
        -webkit-animation: scale-out-center 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
        animation: scale-out-center 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
    }

    @-webkit-keyframes scale-out-center {
        0% {
            -webkit-transform: scale(1);
            transform: scale(1);
            opacity: 1;
        }

        100% {
            -webkit-transform: scale(0);
            transform: scale(0);
            opacity: 1;
        }
    }

    @keyframes scale-out-center {
        0% {
            -webkit-transform: scale(1);
            transform: scale(1);
            opacity: 1;
        }

        100% {
            -webkit-transform: scale(0);
            transform: scale(0);
            opacity: 1;
        }
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<div class="row">
    <div class="col-12">
        <div class="card shadow-none">
            <div class="card-body p-0 pb-5">
                <div class="row justify-content-between p-5 pb-3" id="menuWaste">

                </div>
                <div id="lisMaterial">

                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var user_id = '<?= $this->session->userdata('employee_id') ?>'
    var divisi_id = '<?= $this->session->userdata('division_id') ?>'
    var job_spv_smd = '<?= job_spv_smd() ?>'
    var job_foreman = '<?= job_foreman() ?>'
    var job_logistik_warehouse = '<?= job_logistik_warehouse() ?>'
    var job_supply_sparepart = '<?= job_supply_sparepart() ?>'
    var modeChart = 0
    var dataEntry
    var data_entry_group = []
    var data_entry_group_detail = []
    var variable_insert = []

    $(document).ready(function() {
        // emptyText('#fillWaste', 'Pilih Card untuk Melihat Informasi')
        loadData()
    })

    function loadData() {
        var data = {
            workPlanMachineId: workPlanMachineId,
        }
        var url = "<?= api_produksi('loadPageWasteMaterialEntry'); ?>"
        getData(data, url)
    }

    function getData(data, url) {
        $.ajax({
            url: url,
            method: "GET",
            dataType: 'JSON',
            data: data,
            error: function(xhr) {
                showOverlay('hide')
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Error Data'
                });
            },
            beforeSend: function() {
                showOverlay('show')
            },
            success: function(response) {
                showOverlay('hide')
                dataEntry = response.data
                // console.log(dataEntry.wasteGroup)
                arrangeVariable()
            }
        })
    }

    function arrangeVariable() {
        var index = 0
        dataEntry.wasteGroup.forEach(a => {
            // product
            a.waste_groups.forEach(b => {
                // group waste
                b.waste_group_details.forEach(c => {
                    // detail waste group (material group)
                    var id = new Date().getTime() + '' + b.waste_group.id
                    variable_insert.push({
                        'id': id,
                        'work_plan_id': ,
                        'shift_id': ,
                        'work_plan_product_id': ,
                        'machine_id': ,
                        'item_id_product': ,
                        'waste_group_id': b.waste_group.id,
                        'employee_id': ,
                        'datetime': ,
                        'unit_id': ,
                        'qty': ,
                        'note': ,
                    })
                    data_entry_group.push({
                        'id': a.id,
                        'product_id': a.item_product.id,
                        'waste_group_id': b.waste_group.id,
                        'waste_group_name': b.waste_group.name,
                        'waste_group_ratio': b.ratio_total,
                        'waste_unit_id': b.waste_group.unit_compute.id,
                        'material_group_id': c.material_group.id,
                        'material_group_name': c.material_group.name,
                        'material_group_ratio': c.ratio,
                        'item': []
                    })
                    c.items.forEach(d => {
                        // list item
                        data_entry_group[index].item.push({
                            'item_id': d.item.id,
                            'item_name': d.item.name,
                            'item_is_default': d.item.id_default,
                            'item_unit_id': d.unit.id,
                            'item_unit_name': d.unit.name,
                        })
                    });
                    index++
                });
            });
        });
        // console.log(data_entry_group)
        menuWaste()
    }

    function menuWaste() {
        var html = ''
        html += '<div class="row">'
        html += '<div class="col-auto statusLine small-text pb-2 align-self-center fw-bold filter-border" style="cursor:pointer" onclick="statusLine(' + "'all'" + ')" id="colStatusLineall">Semua</div>'
        dataEntry.wasteGroup.forEach(e => {
            html += '<div class="col-auto statusLine small-text pb-2 align-self-center text-grey" style="cursor:pointer" onclick="statusLine(' + "'" + e.id + "'" + ')" id="colStatusLine' + e.id + '">' + e.item_product.alias + '</div>'
        })
        html += '</div>'
        $('#menuWaste').html(html)
        statusLine('all')
    }

    function statusLine(status) {
        if (status == 'all') {
            var data = dataEntry.wasteGroup
        } else {
            var data = dataEntry.wasteGroup.filter((v, k) => {
                if (v.id == status) return true
            })
        }
        listMaterial(data)
        coloringStatusLine(status)
    }

    function coloringStatusLine(status) {
        // DEFAULT COLOR
        $('.statusLine').each(function() {
            if ($(this).hasClass('fw-bold') && $(this).hasClass('filter-border')) {
                $(this).removeClass('fw-bold filter-border').addClass('text-grey');
            }
        });
        $('.statusLineIcon').each(function() {
            if ($(this).hasClass('bg-light-maroon') && $(this).hasClass('text-white')) {
                $(this).removeClass('bg-light-maroon text-white').addClass('bg-light text-grey');
            }
        });
        $('#colStatusLine' + status).removeClass('text-grey').addClass('fw-bold filter-border')
        $('#statusLineIcon' + status).removeClass('bg-light text-grey').addClass('bg-light-maroon text-white')
    }

    function listMaterial(data) {
        var html = ''
        data.forEach(e => {
            html += '<div class="card shadow-none rounded-0 border-end-0 border-start-0">'
            html += '<div class="card-body p-0">'
            html += '<div class="row m-0">'
            html += '<div class="col-8 border-end">'
            html += '<div class="row p-4">'
            html += '<div class="col-12">'
            html += '<b class="m-0 h1">' + e.item_product.alias + '</b>'
            html += '<p class="m-0 small-text">' + e.item_product.name + '</p>'
            html += '</div>'
            html += '<div class="col">'
            html += '<div class="row mt-4">'

            e.waste_groups.forEach(el => {
                html += '<div class="col-12 mb-2">'
                html += '<div class="card card-waste shadow-none border-2 pointer" onclick="inputWaste(' + e.id + ',' + el.waste_group.id + ')">'
                html += '<div class="card-body">'
                html += '<div class="row">'
                html += '<div class="col-6 align-self-center">'
                html += '<p class="m-0 text-dark-grey"><b>' + el.waste_group.name + '</b></p>'
                html += '</div>'
                html += '<div class="col-4 text-center">'
                html += '<input type="text" class="form-control nominal" autocomplete="off" id="text-waste' + e.id + '' + el.waste_group.id + '" style="border:none;background-color:transparent;" onclick="inputWaste(' + e.id + ',' + el.waste_group.id + ')" oninput="inputWaste(' + e.id + ',' + el.waste_group.id + ')">'
                html += '<hr class="m-0" style="border:1px solid black;">'
                html += '<button class="btn btn-sm btn-success float-end mt-1 p-1 super-small-text" onclick="simpanData()" id="btnSave' + e.id + '' + el.waste_group.id + '" hidden><i class="fa fa-save me-1"></i>Save</button>'
                html += '</div>'
                html += '<div class="col-2 text-end align-self-center">'
                html += '<p class="m-0 fw-bolder small">' + el.waste_group.unit_compute.name + '</p>'
                html += '</div>'
                html += '</div>'
                html += '</div>'
                html += '</div>'
                html += '</div>'
            });

            html += '</div>'
            html += '</div>'
            html += '</div>'
            html += '</div>'
            html += '<div class="col-4" id="fillWaste">'
            html += '</div>'
            html += '</div>'
            html += '</div>'
            html += '</div>'
        })
        $('#lisMaterial').html(html)
        $('.nominal').number(true);
        emptyText('#fillWaste', 'Pilih Card untuk Melihat Informasi')
    }

    function reset() {
        dataProductionOut = []
        dataProductionOutGroup = []
    }

    function inputWaste(id, waste_group_id) {
        var inputValue = $('#text-waste' + id + waste_group_id).val()
        var data = data_entry_group.filter((v, k) => {
            if (v.id == id && v.waste_group_id == waste_group_id) return true
        })
        var html = ''
        html += '<div class="row p-0">'

        html += '<div class="col-12 p-4">'
        html += '<p class="m-0 super-small-text"><b>Detail Information</b></p>'
        html += '<p class="m-0 h3"><b>' + data[0].waste_group_name + '</b></p>'
        html += '</div>'

        html += '<div class="col-12 p-0">'

        data.forEach(e => {
            html += '<div class="card rounded-0 shadow-none border-0 border-top border-bottom" style="background-color:transparent">'
            html += '<div class="card-body p-3">'
            html += '<div class="row">'
            html += '<div class="col-9">'
            html += '<p class="m-0 small-text fw-bolder">' + e.material_group_name + '</p>'
            var dataItem = e.item.find((v, k) => {
                if (v.item_is_default) return true
            })
            var edit = ''
            if (e.item.length > 1) {
                edit = '<i class="fa fa-pencil text-primary ms-1 pointer" onclick="showEditItem(' + id + ',' + waste_group_id + ',' + e.material_group_id + ')"></i>'
            }
            html += '<p class="m-0 super-small-text" id="textItem' + id + '' + waste_group_id + '' + e.material_group_id + '">' + dataItem.item_name + ' ' + edit + '</p>'
            // select
            html += '<div class="row g-3" id="item' + id + '' + waste_group_id + '' + e.material_group_id + '" hidden>'
            html += '<div class="col-sm-10">'
            html += '<select name="" class="form-control form-control-sm p-1 item small-text">'
            if (e.item.length) {
                e.item.forEach(e => {
                    var select = ""
                    if (e.item_is_default) {
                        select = 'selected'
                    }
                    html += '<option value="' + e.item_id + '" ' + select + ' data-name="' + e.item_name + '">' + e.item_name + '</option>'
                });
            } else {
                html += '<option value="" selected disabled>Tidak Ada Satuan</option>'
            }
            html += '</select>'
            html += '</div>'
            html += '<div class="col-sm align-self-center">'
            html += '<span class="fa fa-times text-danger ms-1 pointer" onclick="showEditItem(' + id + ',' + waste_group_id + ',' + e.material_group_id + ')"></span>'
            html += '</div>'
            html += '</div>'
            // seelect
            html += '</div>'
            html += '<div class="col-3 align-self-center text-end">'
            var total = 0
            if (inputValue) {
                total = roundToTwo(parseInt(e.material_group_ratio) / parseInt(e.waste_group_ratio) * parseFloat(inputValue))
            } else {
                total = 0
            }
            html += '<p class="m-0 small-text text-orange fw-bold">' + number_format(total) + '</p>'
            html += '</div>'
            html += '</div>'
            html += '</div>'
            html += '</div>'
        })

        html += '</div>'
        html += '<div class="col-12 p-4">'
        html += '</div>'

        html += '</div>'
        $('#fillWaste').html(html)
        showSaveButton(inputValue, id, waste_group_id)
    }

    function showSaveButton(inputValue, id, waste_group_id) {
        if (inputValue) {
            $('#btnSave' + id + '' + waste_group_id).removeAttr('hidden', true)
        } else {
            $('#btnSave' + id + '' + waste_group_id).attr('hidden', true)
        }
    }

    function showEditItem(id, waste_group_id, material_group_id) {
        if ($('#item' + id + '' + waste_group_id + '' + material_group_id).is('[hidden]')) {
            $('#item' + id + '' + waste_group_id + '' + material_group_id).removeAttr('hidden', true)
            $('#textItem' + id + '' + waste_group_id + '' + material_group_id).attr('hidden', true)
        } else {
            $('#item' + id + '' + waste_group_id + '' + material_group_id).attr('hidden', true)
            $('#textItem' + id + '' + waste_group_id + '' + material_group_id).removeAttr('hidden', true)
        }
        arrangeVariableInsert()
    }

    function arrangeVariableInsert() {

    }

    function simpanData() {
        var type = 'POST'
        var button = '#btnSimpan'
        var url = '<?php echo api_produksi('setMachineTransfer'); ?>'
        kelolaData(data, type, url, button)
    }

    function kelolaData(data, type, url, button) {
        $.ajax({
            url: url,
            type: type,
            data: data,
            error: function(xhr) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Error Data'
                });
                $(button).prop("disabled", false);
            },
            beforeSend: function() {
                $(button).prop("disabled", true);
            },
            success: function(response) {
                $(button).prop("disabled", false);
                $('#modal').modal('hide')
                loadData()
            }
        });
    }
</script>